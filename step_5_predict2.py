#-*-coding:UTF-8-*-
'''
Created on 2016-8-9

@author: hanahimi
'''
import tensorflow as tf
import numpy as np
import cv2
import time
from dataio import *

from dataio import load_pickle
# from corner_dataset import Corset
np.set_printoptions(threshold = 1e6)

IMSIZE = 32
OUTPUTNUM = 2
n_h = IMSIZE
n_w = IMSIZE
n_input = n_h*n_w
#dataset = Corset(r"F:\eclipse\workspace\corner_regression_indexFile")
myGraph = tf.Graph()
# writer = tf.train.SummaryWriter('./board', myGraph)
merged = None
train_summaries = []

def weight_variable(shape):
    initial = tf.truncated_normal(shape, stddev=0.1)
    return tf.Variable(initial)

def bias_variable(shape):
    initial = tf.constant(0.1, shape=shape)
    return tf.Variable(initial)

def conv2d(x,W,x_stride=1,y_stride=1, name=None):
    conv =  tf.nn.conv2d(x,W,strides=[1,x_stride,y_stride,1],padding='VALID')
    return conv

def max_pool(x, k=2, name=None):
    return tf.nn.max_pool(value=x, ksize=[1,k,k,1], strides=[1,k,k,1], padding='SAME', name=name)

def norm(x, lsize=4,name=None):
    return tf.nn.lrn(x,lsize,bias=10,alpha=0.001/9.0,beta=0.75,name=name)

def convert_cpp(fpath, array, pre_fix):
    arr_shape = array.shape
    if not (1<=len(arr_shape)<=4):
        return
    else:
        if len(arr_shape)==1:
            with open(fpath,'w+') as f:
                f.write("int l32%sNum=%d;\n" % (pre_fix,arr_shape[0]))
                f.write("float af32%s[%d] = {" % (pre_fix,arr_shape[0]))
                items = []
                for i in range(arr_shape[0]):
                    if i%10==0:
                        items.append("\n% 9.6ff" % array[i])
                    else:
                        items.append("% 9.6ff" % array[i])
                items = ",".join(items)
                f.write(items)
                f.write("};\n")
        elif len(arr_shape)==2:
            with open(fpath,'w+') as f:
                f.write("int l32%sInNum=%d;\n" % (pre_fix,arr_shape[0]))
                f.write("int l32%sOutNum=%d;\n" % (pre_fix,arr_shape[1]))
                f.write("float af32%s[%d] = {\n" % (pre_fix,arr_shape[0]*arr_shape[1]))
                for row in range(arr_shape[0]):
                    items = []
                    for col in range(arr_shape[1]):
                        items.append("% 9.6ff" % array[row][col])
                    items = ",".join(items)
                    if row%10==0:
                        f.write("\n//"+"-"*int(col/2)+(" line: % 4d " % row) +"-"*int((col/2))+"\n")
                    if row != arr_shape[0]-1:
                        f.write(items+",\n")
                    else:
                        f.write(items+"\n")
                f.write("};\n")
        elif len(arr_shape)==4:
            with open(fpath,'w+') as f:
                num,row,col,chn = arr_shape
                f.write("int l32%sHeight=%d;\n" % (pre_fix,row))
                f.write("int l32%sWidth=%d;\n" % (pre_fix,col))
                f.write("int l32%sChannel=%d;\n" % (pre_fix,chn))
                f.write("int l32%sNum=%d;\n" % (pre_fix,num))
                f.write("float af32%s[%d] = {\n" % (pre_fix,num*chn*row*col))
                 
                for n in range(num):
                    f.write("\n// output-%d\t%dx[%d*%d]\n" % (n,chn,row,col))
                    for c in range(chn):
                        f.write("//=============kernel-%d, channel-%d==============" % (n,c))
                        one_filter = []
                        for i in range(row):
                            for j in range(col):
                                if j == 0:
                                    one_filter.append("\n% 9.6ff" % array[n][i][j][c])
                                else:
                                    one_filter.append("% 9.6ff" % array[n][i][j][c])
                        if c != chn-1:
                            one_filter = ",".join(one_filter)+",\n"
                        else:
                            if n != num-1:
                                one_filter = ",".join(one_filter)+",\n"
                            else:
                                one_filter = ",".join(one_filter)+"\n"
                        f.write(one_filter)
                         
                f.write("};\n")
 
def write_mean_image(im):
    with open("convert_cpp/cnn_mean_image.cpp","w+") as f:
        n = im.shape[0]
        f.write('#include "cnn_params.h"\n\n')
        f.write("float af32MeanImage[%d]={\n" % n)
        for i in range(n):
            if i % 32 == 0:
                f.write("\n")
            f.write("% 9.6ff," % im[i])
        f.write("};\n")
             
def convert_cpp_models(nets,save_root):
    # write cpp
    for key in nets.keys():
        weight = nets[key]
        print(key,weight.shape)
        fpath = save_root+"\\cnn_"+key+".cpp"
        convert_cpp(fpath, weight, key)
    # write_header
#     fpath = "convert_weights/Ocr_cnn_params.h"
#     convert_header(fpath, nets)
nets = {
    'input':"32x32, 2-labels",
    # conv1: 3x[32x32]->6x[28x28] 
    'C1w':  weight_variable([5,5,3,6]),
    'C1b':  bias_variable([6]),
    # conv2: 6x[14x14]->16x[10x10]
    'S2':   "2x2, maxpooling, 28x28->14x14",
    'C3w':  weight_variable([5,5,6,16]),
    'C3b':  bias_variable([16]),
    # conv3: 6x[5x5]->120x[1x1] 
    'S4':   "2x2, maxpooling, 10x10->5x5",
    'C5w':  weight_variable([5,5,16,120]),
    "C5b":  bias_variable([120]),
    # FC4: 120x84
    "F6" :   120,
    "F6w":  weight_variable([120,84]),
    "F6b":  bias_variable([84]),
    # FC5: 84x2
    "Fow":  weight_variable([84,OUTPUTNUM]),
    "Fob":  bias_variable([OUTPUTNUM])
}

def RegNet(x, keep_prob):
    x_image = tf.reshape(x, [-1,n_h, n_w, 3], name="x_image")
    # conv1
    tf.add_to_collection('image_in',x)  
    tf.add_to_collection('x_image',x_image)  
    
    conv1   = conv2d(x_image, nets['C1w'],name="conv1") + nets["C1b"]
    relu1   = tf.nn.relu(conv1, name="relu1")
    pool1   = max_pool(relu1,k=2, name="pool1")
    norm1   = norm(pool1, lsize=4, name="norm1")
    
    tf.add_to_collection('norm1',norm1)  
      
    drop1   = tf.nn.dropout(norm1, keep_prob=keep_prob, name='drop1')
    
    tf.add_to_collection('drop1',drop1)  
    # conv2
    conv2   = conv2d(drop1, nets['C3w'],name="conv2") + nets["C3b"]
    relu2   = tf.nn.relu(conv2, name="relu2")
    pool2   = max_pool(relu2,k=2, name="pool2")
    norm2   = norm(pool2, lsize=4, name="norm2")
    
    tf.add_to_collection('norm2',norm2)  
     
    drop2   = tf.nn.dropout(norm2, keep_prob=keep_prob, name='drop2')
    # conv3
    conv3   = conv2d(drop2, nets['C5w'],name="conv3") + nets['C5b']
    relu3   = tf.nn.relu(conv3, name="relu3")
    pool3_flat = tf.reshape(relu3, [-1, nets["F6"]])
    
    tf.add_to_collection('pool3_flat',pool3_flat)  
    # FC4
    fc4 = tf.nn.relu(tf.matmul(pool3_flat, nets["F6w"]) + nets["F6b"],name="fc4")
    
    tf.add_to_collection('fc4',fc4)  
     
    fc4_drop = tf.nn.dropout(fc4, keep_prob=keep_prob, name="fc4drop")
    # FC5 - logit
    logits = tf.matmul(fc4_drop,nets["Fow"])+nets["Fob"]
    
    return logits
x = tf.placeholder("float", shape = [None,1024*3])
y_ = tf.placeholder("float",shape = [None, 1])
keep_prob = tf.placeholder("float")
pred = RegNet(x, keep_prob)
    
def predict(logistic, x_holder, x_in,keep_prob_holder, model_name, pkl_name, input_size):
   
    saver = tf.train.Saver()
    with tf.Session() as sess:
        sess.run(tf.global_variables_initializer())
        saver.restore(sess, ("C:/WTF/Hello_TF_test/src/save_ckpt/%s_%d.ckpt" % (model_name,input_size)))
        print("Model restored")
        y_pred = sess.run(logistic, feed_dict={x_holder: x_in, keep_prob_holder: 1.0})
        img_in = tf.get_collection('image_in')[0] 
        img = tf.get_collection('x_image')[0]  
        norm1 = tf.get_collection('norm1')[0]  
        norm2 = tf.get_collection('norm2')[0]
        pool3_flat = tf.get_collection('pool3_flat')[0]
        fc4 = tf.get_collection('fc4')[0]

        params=tf.trainable_variables()
        print("Trainable variables:------------------------")

        for idx, v in enumerate(params):
            
            print("  param {:3}: {:15}   {}".format(idx, str(v.get_shape()), v.name))
            print(sess.run(v,feed_dict={img_in:x_in}))
#         img = cv2.imread(path_to_image_file)
#         img_reshape = np.zeros(img.shape, np.float32)
#         img_reshape = img.copy()
#         img_reshape = np.reshape(img_reshape,[1,64,64,3])
        inter_result = {}
        inter_result['x_image'] = sess.run(img,feed_dict={img_in:x_in})
        inter_result['norm1'] = sess.run(norm1,feed_dict={img_in:x_in})
        inter_result['norm2'] = sess.run(norm1,feed_dict={img_in:x_in})
        inter_result['pool3_flat'] = sess.run(norm1,feed_dict={img_in:x_in})
        inter_result['fc4'] = sess.run(norm1,feed_dict={img_in:x_in})

        root = r"F:\eclipse\LightCNN_CV_demo_classify_rgb\error_debug\cnn"
        convert_cpp_models(inter_result,root)
        return y_pred

if __name__=="__main__":
    pass
    af32MeanImage= np.array([64.378129, 73.987934, 74.545749, 64.544784, 73.994415, 75.844032, 65.725229, 75.045370, 77.522650, 66.614631, 75.686479, 78.417362, 67.304971, 76.188582, 79.240157, 67.934221, 77.181549, 80.302075, 69.448804, 79.838102, 82.548025, 73.974557, 85.674619, 87.516376, 78.732400, 91.827070, 93.361580, 81.039785, 94.722126, 96.163070, 80.662346, 95.115218,
     96.566435, 80.646556, 95.356409, 96.804730, 80.866097, 96.046128, 97.686686, 79.014135, 95.284700, 96.764669, 76.895815, 94.188720, 95.180170, 74.071227, 92.269117, 93.262635, 72.431359, 91.170792, 91.858995, 71.393367, 90.194580, 90.581259, 70.024064, 89.083155, 89.166793, 72.022685, 91.189409, 91.368200, 72.797973, 91.899607, 92.452389, 73.144315,
     92.157140, 92.761980, 71.871544, 91.203268, 91.708957, 70.328897, 89.802386, 90.553679, 71.407502, 91.384541, 91.934634, 72.138178, 92.125078, 92.486106, 71.586706, 91.542853, 92.067296, 70.787492, 90.992898, 91.605461, 69.937530, 90.362063, 91.021444, 70.918017, 91.355582, 91.959526, 71.732055, 92.179687, 92.887747, 71.397159, 92.007516, 92.492519,
     63.736675, 73.381852, 74.219127, 64.558850, 74.005447, 76.053989, 65.092326, 74.314762, 77.056264, 65.833207, 74.842515, 77.616217, 66.690892, 75.624974, 78.415293, 67.471971, 76.713645, 79.550852, 69.030201, 79.379783, 82.072813, 73.910225, 85.609874, 87.730745, 78.877129, 91.841412, 93.685858, 81.311522, 94.874233, 96.568848, 80.964283, 95.204096,
     96.822657, 80.632283, 95.116252, 96.623664, 80.546990, 95.620010, 97.129353, 78.436668, 94.764118, 96.210094, 76.024960, 93.591809, 94.698614, 73.046956, 91.297456, 92.264290, 71.675171, 90.413156, 91.023995, 72.499276, 91.369027, 91.680204, 71.329104, 90.396056, 90.733021, 71.998759, 90.985382, 91.538578, 71.109012, 90.282355, 90.875336, 71.439013,
     90.742053, 91.420809, 72.135420, 91.575536, 92.204234, 71.742053, 91.178997, 91.899676, 71.459491, 91.158519, 91.977522, 71.205130, 90.868717, 91.667379, 70.626836, 90.502655, 91.236710, 71.232779, 91.393850, 92.165207, 71.204440, 91.544439, 92.328553, 71.093222, 91.457905, 92.186858, 70.807695, 91.081707, 91.847342, 70.419637, 90.545680, 91.369165,
     63.634145, 73.178653, 74.133559, 64.349997, 73.541129, 75.956768, 64.962491, 73.973109, 77.057850, 65.911880, 74.902365, 77.743984, 66.661656, 75.551058, 78.261946, 67.299455, 76.541612, 79.340412, 68.825691, 79.220437, 82.069503, 74.107633, 85.872371, 88.054540, 78.883197, 91.969317, 93.884300, 81.517065, 95.122733, 96.776736, 80.675860, 94.965249,
     96.628284, 80.582707, 95.174791, 96.705164, 81.028753, 96.162173, 97.490450, 79.294905, 95.710543, 96.976901, 76.297456, 93.850169, 95.081156, 72.310625, 90.438875, 91.611115, 70.893470, 89.705302, 90.442529, 72.898228, 91.709302, 92.146797, 72.780873, 91.585327, 92.161760, 72.295456, 91.226643, 91.873750, 69.787354, 89.082190, 89.610908, 69.722333,
     89.071985, 89.892022, 72.056402, 91.509412, 92.322761, 72.551886, 92.100669, 92.743501, 71.992967, 91.816865, 92.629180, 70.048128, 89.821209, 90.769634, 69.603323, 89.541750, 90.437840, 71.273047, 91.415983, 92.323588, 72.006481, 92.277391, 93.242502, 71.516031, 91.786872, 92.736261, 70.250983, 90.493208, 91.360891, 69.737434, 89.907950, 90.753017,
     64.336827, 73.656968, 74.626008, 64.558091, 73.522375, 76.071847, 65.243398, 74.179825, 77.243398, 66.451355, 75.402400, 78.246156, 67.601117, 76.520582, 79.232504, 67.466042, 76.827829, 79.589051, 68.630973, 79.069227, 81.841274, 74.171551, 85.853548, 87.993381, 79.460663, 92.582431, 94.389230, 82.346204, 96.066055, 97.543681, 81.376681, 95.849135,
     97.457009, 80.500862, 95.195684, 96.691167, 81.127491, 96.283803, 97.621802, 79.905261, 96.216093, 97.431221, 77.232504, 94.423016, 95.572226, 73.955940, 91.881404, 92.984831, 71.782666, 90.513756, 91.271806, 72.334207, 91.006137, 91.402262, 72.972626, 91.680411, 92.103772, 72.711094, 91.730607, 92.298973, 71.077777, 90.302282, 90.897194, 71.098876,
     90.370958, 91.181480, 71.620217, 91.062056, 91.928773, 72.566435, 92.150107, 92.913121, 72.225402, 92.217541, 92.958905, 71.082121, 91.149624, 91.982004, 70.937392, 90.953734, 91.921258, 71.414604, 91.476936, 92.525477, 71.934703, 92.097290, 93.181204, 71.641453, 91.833759, 92.911880, 71.181893, 91.609184, 92.465904, 70.936082, 91.436806, 92.037992,
     64.073157, 73.578846, 74.665035, 64.215542, 73.487761, 75.776598, 65.078673, 74.189547, 76.941598, 66.530580, 75.502448, 78.274840, 67.443701, 76.406261, 79.201407, 67.720334, 77.100669, 79.778735, 68.747156, 79.074950, 81.733641, 74.221265, 85.598083, 87.931600, 79.703579, 92.701027, 94.661174, 82.227746, 96.046887, 97.668758, 81.638351, 96.145763,
     97.633731, 80.528925, 95.181273, 96.689237, 81.107978, 96.161622, 97.735986, 79.986830, 96.229746, 97.642005, 77.712060, 94.686892, 95.801696, 74.913673, 92.737089, 93.630835, 72.666276, 91.231262, 91.824795, 71.969455, 90.570985, 90.996415, 71.194305, 90.101358, 90.410881, 71.991105, 91.153554, 91.585879, 72.829139, 92.015238, 92.670068, 71.963180,
     91.240226, 91.989864, 70.674757, 90.162449, 90.987865, 70.332000, 90.010963, 90.825691, 71.220023, 91.097911, 91.805557, 71.963525, 91.988692, 92.662897, 71.422051, 91.490795, 92.280769, 71.477143, 91.523685, 92.401848, 70.234848, 90.296559, 91.190305, 70.976832, 91.159208, 92.097635, 71.886024, 92.314831, 93.123492, 71.699786, 92.158174, 92.767703,
     64.225333, 74.003861, 75.009584, 64.827415, 74.223057, 76.371440, 65.457216, 74.635799, 77.242295, 66.497001, 75.510722, 78.316141, 67.357581, 76.241467, 79.076260, 68.347583, 77.537613, 80.307660, 68.656692, 78.785837, 81.568296, 73.926429, 85.190099, 87.678687, 79.750534, 92.744191, 94.845894, 82.404123, 96.221885, 97.850238, 82.257464, 96.482383,
     97.962215, 81.086879, 95.587120, 97.091843, 80.803972, 95.821278, 97.442184, 79.674688, 95.969041, 97.455285, 77.916569, 94.926291, 96.151900, 75.164035, 92.886161, 93.887472, 73.251603, 91.841757, 92.291319, 71.779287, 90.464456, 90.909536, 70.550920, 89.379094, 89.833000, 71.582500, 90.517065, 90.993174, 72.978832, 92.055023, 92.729022, 73.291664,
     92.481556, 93.313039, 71.339792, 90.784527, 91.604289, 69.733917, 89.399986, 90.180652, 71.332345, 91.015997, 91.895194, 72.587051, 92.413639, 93.206026, 72.383231, 92.409639, 93.079087, 71.839550, 91.978763, 92.663863, 70.492726, 90.541819, 91.309108, 70.676481, 90.716541, 91.568296, 72.334069, 92.380266, 93.339792, 72.441495, 92.631525, 93.492381,
     64.387092, 73.961801, 74.768048, 64.778046, 73.912846, 76.008136, 65.634007, 74.657588, 77.416948, 66.773012, 75.826588, 78.580432, 67.398125, 76.267531, 78.981935, 67.963870, 77.037647, 79.816659, 69.498380, 79.584638, 82.357581, 74.643108, 86.117493, 88.348204, 80.116528, 93.157071, 94.943115, 82.679308, 96.273874, 97.830035, 82.455561, 96.321933,
     98.000690, 81.453148, 95.709784, 97.234296, 81.050059, 95.903675, 97.460663, 79.896849, 95.995311, 97.664621, 78.079983, 94.944632, 96.359236, 74.468662, 91.991174, 93.212990, 73.114666, 91.412673, 92.113563, 72.708543, 91.112253, 91.593188, 71.811143, 90.201200, 90.810384, 72.385851, 90.793974, 91.551679, 72.148038, 90.806385, 91.625595, 73.179825,
     92.110529, 92.953251, 72.962284, 92.071089, 93.021858, 71.878991, 91.166310, 92.184583, 72.055644, 91.627870, 92.606150, 72.037854, 91.691788, 92.662208, 72.214714, 91.958698, 92.934358, 72.858098, 92.808936, 93.815142, 72.115355, 91.977315, 92.997380, 72.127905, 91.932359, 92.951803, 72.690892, 92.469765, 93.656761, 72.587465, 92.479280, 93.543405,
     64.775495, 74.111632, 74.909260, 65.303592, 74.205130, 76.431842, 66.007791, 74.827277, 77.635248, 66.642143, 75.629525, 78.349583, 67.675515, 76.513687, 79.251603, 67.781562, 76.859684, 79.573605, 69.390195, 79.471075, 82.108047, 75.226436, 86.620492, 88.521961, 80.618906, 93.464249, 94.928980, 82.711163, 96.127284, 97.667862, 82.038613, 95.803351,
     97.507136, 81.196442, 95.226643, 96.856030, 81.449769, 95.980004, 97.601531, 80.317658, 95.910915, 97.593394, 78.417845, 94.941736, 96.274702, 74.701717, 91.950838, 93.219265, 72.700545, 90.311867, 91.397642, 73.590016, 91.312280, 92.079225, 73.526098, 91.521892, 92.193477, 72.833759, 90.933117, 91.692546, 71.875888, 90.273254, 91.086948, 72.129835,
     90.945184, 91.574364, 73.736261, 92.525822, 93.534579, 73.847273, 92.753499, 93.875888, 73.420120, 92.770875, 93.590223, 72.503068, 92.003379, 92.894642, 72.317245, 91.670758, 92.909398, 73.074674, 92.656278, 93.986761, 73.713852, 93.317865, 94.681721, 73.435565, 93.013859, 94.300627, 72.840792, 92.517134, 93.758257, 71.837965, 91.477281, 92.700269,
     64.915121, 74.331724, 75.201682, 65.355995, 74.133696, 76.575605, 66.200717, 74.780321, 77.685513, 67.247259, 75.815555, 78.725160, 67.966765, 76.574019, 79.483348, 68.460319, 77.594980, 80.297318, 70.216093, 80.253603, 82.869820, 75.580707, 86.711025, 88.608771, 80.712060, 93.311108, 94.885472, 82.690064, 95.931325, 97.566503, 82.661794, 96.401296,
     98.014480, 82.095153, 96.075984, 97.655313, 82.271737, 96.673102, 98.171620, 81.329587, 96.722058, 98.172102, 79.541612, 95.719644, 96.943322, 76.879128, 93.690409, 94.851824, 74.913535, 91.994070, 93.219334, 75.843136, 92.826312, 93.954216, 76.514583, 93.899676, 94.856099, 76.352824, 93.981452, 94.782941, 75.069848, 93.095084, 93.909536, 75.806040,
     94.012135, 94.938495, 76.614494, 94.793353, 95.949114, 78.043784, 96.386265, 97.630904, 77.007309, 95.681169, 96.758946, 75.350479, 94.266014, 95.264566, 75.318279, 94.121285, 95.259257, 76.056402, 94.973799, 96.389712, 76.591602, 95.613183, 97.124250, 76.637110, 95.653106, 97.125560, 75.838999, 94.940840, 96.325657, 75.281183, 94.421430, 95.901400,
     64.901124, 74.203544, 75.175343, 65.107909, 73.838102, 76.237192, 65.835413, 74.428325, 77.380818, 67.415155, 75.879197, 78.898849, 68.482176, 76.921189, 79.862166, 69.063780, 78.075295, 80.817417, 70.681238, 80.608909, 83.311867, 75.615390, 86.602082, 88.715852, 80.922568, 93.330759, 95.102531, 82.880645, 95.954561, 97.659381, 82.587740, 96.163897,
     97.941667, 82.182652, 96.010894, 97.661587, 81.897401, 96.345997, 97.804523, 81.458112, 96.972351, 98.341584, 80.550369, 96.908019, 98.243881, 78.407502, 95.379577, 96.486796, 77.053299, 94.224850, 95.199407, 77.888368, 94.737434, 95.864649, 77.572709, 94.693925, 95.692960, 78.236089, 95.470868, 96.438047, 77.644625, 95.112666, 96.071296, 77.170447,
     94.765083, 96.075571, 78.089154, 96.019720, 97.199062, 78.364614, 96.501414, 97.695649, 78.221127, 96.431704, 97.853134, 77.766807, 96.118527, 97.375646, 77.112597, 95.524374, 96.725229, 77.075502, 95.595463, 97.033855, 77.406537, 95.960422, 97.440667, 77.436324, 96.091429, 97.608357, 77.574157, 96.271668, 97.819761, 76.972695, 95.740743, 97.295180,
     65.368613, 74.595325, 75.680825, 65.527408, 74.362753, 76.778460, 66.268014, 74.960146, 77.885058, 67.905123, 76.341929, 79.268634, 68.995380, 77.301524, 80.119975, 69.453010, 78.380749, 81.169482, 70.662828, 80.556643, 83.356133, 75.666552, 86.614976, 88.696201, 81.110046, 93.565124, 95.223540, 83.126663, 96.247397, 97.818038, 83.017652, 96.576915,
     98.289319, 82.744674, 96.580156, 98.172585, 82.776391, 97.199683, 98.669930, 82.315245, 97.698959, 99.147211, 80.427429, 96.900228, 98.349790, 78.104185, 95.205130, 96.383645, 77.716197, 94.697649, 95.698062, 78.125422, 94.871337, 96.049231, 77.946770, 94.929739, 96.106461, 78.769220, 95.832035, 97.107909, 77.866855, 94.991105, 96.343584, 77.829415,
     95.068675, 96.667793, 77.935600, 95.598428, 97.107357, 77.920154, 95.986968, 97.396677, 78.127698, 96.244156, 97.828311, 77.573812, 95.681859, 97.317107, 77.639178, 95.791905, 97.509688, 78.069365, 96.510377, 98.157760, 77.524443, 96.062401, 97.651934, 77.482038, 96.166586, 97.707509, 77.925464, 96.678756, 98.222713, 77.796594, 96.423223, 98.188030,
     66.197338, 75.489416, 76.560298, 66.091705, 75.093015, 77.418603, 66.887127, 75.623457, 78.567055, 68.270358, 76.641936, 79.666069, 68.964904, 77.368544, 80.271806, 69.199269, 78.239399, 81.106943, 71.007447, 80.966559, 83.797076, 76.098807, 87.249397, 89.236089, 81.535475, 94.152727, 95.800731, 83.051231, 96.194167, 97.670620, 83.234227, 96.936565,
     98.496656, 82.963801, 97.049714, 98.531752, 83.000552, 97.706750, 99.282700, 83.147280, 98.611873, 100.258016, 80.318831, 96.683927, 98.410536, 78.941116, 96.080742, 97.646832, 78.489485, 95.424740, 96.961111, 79.321037, 96.011170, 97.496587, 79.078191, 96.147349, 97.478866, 79.455009, 96.784389, 97.983383, 78.777563, 96.113287, 97.540578, 78.803627,
     96.215611, 97.878094, 78.690064, 96.426463, 98.327725, 78.752948, 96.716679, 98.806454, 78.710060, 96.828311, 98.958078, 78.184514, 96.259464, 98.390195, 78.946425, 97.064883, 99.408950, 79.361236, 97.841964, 100.100807, 79.121147, 97.763842, 99.912708, 78.550783, 97.434393, 99.523271, 78.846446, 97.747087, 99.924912, 78.552713, 97.473695, 99.650072,
     66.657726, 76.053024, 77.028546, 66.760050, 75.772806, 78.150176, 67.749983, 76.626767, 79.547542, 68.451079, 77.093084, 80.125009, 69.414535, 77.785631, 80.878577, 69.936703, 78.768806, 81.797904, 71.540647, 81.505344, 84.415362, 76.530373, 87.755706, 89.971661, 82.121492, 94.789285, 96.707440, 83.361374, 96.654416, 98.280080, 83.059574, 96.896435,
     98.462525, 82.625388, 96.759153, 98.375026, 82.818038, 97.495070, 99.406468, 82.742536, 98.336896, 100.533614, 80.935944, 97.518789, 99.585879, 79.562711, 96.868924, 98.759981, 79.234848, 96.820037, 98.457147, 79.272633, 96.720954, 98.276701, 79.218162, 96.856926, 98.443908, 78.992277, 96.864028, 98.478729, 77.858857, 96.054265, 97.711577, 78.078467,
     96.254913, 98.328001, 79.167552, 97.483486, 99.757223, 78.836034, 97.441702, 99.962491, 78.400262, 97.109012, 99.815280, 78.341929, 97.178101, 99.677101, 78.396746, 97.303730, 99.925671, 79.215680, 98.559470, 101.098600, 79.023650, 98.634765, 101.149624, 78.469006, 98.123905, 100.702820, 78.763221, 98.297180, 100.958353, 78.385644, 98.065779, 100.624905,
     67.047301, 76.847135, 77.792043, 67.386954, 76.573950, 78.848445, 68.181893, 77.063573, 80.077294, 69.115355, 77.838171, 81.095704, 70.102462, 78.681376, 81.814521, 70.897056, 79.849686, 82.825760, 72.961801, 82.962077, 85.936703, 78.177549, 89.421016, 91.865890, 83.237468, 95.941391, 98.046818, 84.196442, 97.628629, 99.399917, 84.390333, 98.362546,
     100.059781, 83.533958, 97.888506, 99.725505, 83.714197, 98.485555, 100.705095, 83.790181, 99.554989, 102.001172, 82.497621, 99.438599, 101.659036, 80.400607, 98.415569, 100.523064, 80.647452, 99.569537, 101.587051, 80.341447, 99.292698, 101.376474, 80.468041, 99.644418, 101.927946, 80.122733, 99.488520, 101.911053, 79.851962, 99.453010, 101.866441, 79.987382,
     99.668069, 102.332828, 80.666483, 100.579259, 103.269806, 80.129559, 100.354616, 103.253672, 80.034545, 100.351582, 103.442598, 79.689581, 100.129421, 103.364269, 80.246018, 100.886506, 104.050748, 80.775908, 101.801834, 104.677377, 80.438737, 101.794112, 104.638902, 79.983728, 101.436806, 104.426326, 79.880025, 101.350893, 104.339240, 79.961663, 101.286837, 104.391850,
     66.733503, 76.226919, 77.301731, 67.322830, 76.319382, 78.878991, 67.928498, 76.526788, 79.709922, 69.110460, 77.548507, 80.673998, 70.346204, 78.885127, 81.936841, 71.202579, 80.118389, 83.272082, 72.704544, 82.576157, 85.598290, 78.035993, 89.305523, 91.676825, 83.146384, 95.968627, 98.321451, 84.759084, 98.128663, 100.381369, 84.708267, 98.776391,
     100.815417, 84.235469, 98.733159, 100.860718, 85.120803, 100.041991, 102.453423, 85.384127, 101.471627, 103.991795, 82.917258, 100.349652, 102.759360, 82.475143, 100.961525, 103.222988, 82.604565, 102.371647, 105.108322, 82.390609, 102.564504, 105.328277, 81.757361, 102.632076, 105.301800, 81.769289, 102.798249, 105.730470, 81.125629, 102.226850, 105.280976, 81.109564,
     102.512928, 105.527063, 81.709095, 103.301662, 106.465559, 81.556850, 103.257602, 106.612011, 81.328622, 103.483417, 106.667724, 81.205613, 103.678825, 107.009171, 80.813004, 103.535062, 106.904709, 81.535613, 104.294973, 107.649590, 81.091498, 104.099497, 107.391850, 81.431014, 104.577949, 107.870923, 81.189478, 104.299042, 107.612908, 80.945253, 103.922292, 107.278149,
     67.070192, 76.196097, 77.449286, 67.568848, 76.356823, 79.016204, 67.413776, 76.048749, 79.085293, 68.831000, 77.315866, 80.176308, 70.298628, 78.819072, 81.817279, 71.429980, 80.380611, 83.608564, 72.880507, 82.704199, 85.853754, 77.904434, 88.997104, 91.520099, 83.083983, 95.711439, 98.287803, 85.143832, 98.542371, 100.834793, 84.984831, 99.087913,
     101.339723, 84.065090, 98.547887, 100.912363, 84.784665, 99.809212, 102.311384, 84.673309, 101.011653, 103.581742, 83.631662, 101.225953, 103.794181, 83.158381, 101.605392, 104.189340, 83.024960, 102.960629, 106.069848, 82.344067, 102.999931, 106.116941, 81.656416, 103.121009, 106.081983, 82.260843, 103.964835, 107.062056, 81.455492, 103.302972, 106.614287, 81.193477,
     103.257740, 106.694408, 81.166793, 103.535269, 107.078949, 81.206509, 103.714749, 107.263601, 80.964421, 103.915673, 107.263876, 80.481142, 103.752879, 107.190030, 80.478591, 103.825898, 107.383300, 81.048197, 104.454044, 108.192995, 80.191547, 103.777219, 107.549541, 80.683445, 104.247811, 107.939530, 80.863752, 104.314831, 107.951320, 80.452320, 104.007998, 107.507826,
     67.156657, 76.296973, 77.649176, 67.620699, 76.319106, 78.994691, 67.692340, 76.247466, 79.220782, 68.617734, 77.209957, 80.114597, 70.384610, 78.992829, 81.921740, 70.821761, 79.889885, 83.028822, 73.254223, 83.244087, 86.604978, 78.048266, 89.061642, 91.900710, 83.460594, 95.865545, 98.418741, 85.304971, 98.386817, 100.681583, 84.855064, 98.759084,
     101.192995, 83.901469, 98.233538, 100.661449, 84.679032, 99.616355, 102.296352, 84.976626, 101.205061, 103.961318, 83.450045, 100.931118, 103.408605, 83.707991, 102.115286, 104.551955, 83.504999, 103.588982, 106.446046, 82.297732, 102.931531, 106.016479, 81.292146, 102.486451, 105.739364, 82.261049, 103.919741, 107.087568, 82.154865, 103.932841, 107.213956, 81.611804,
     103.747569, 107.080742, 81.621940, 104.010136, 107.487485, 81.140798, 103.866441, 107.184307, 81.272013, 104.315383, 107.720127, 80.597394, 103.773150, 107.297800, 80.498724, 103.675998, 107.329863, 80.895401, 104.198166, 108.019099, 80.350962, 103.738537, 107.628904, 80.621664, 104.044129, 107.981935, 80.843274, 104.081225, 107.928015, 80.505757, 103.726953, 107.377715,
     66.380887, 75.194098, 76.741847, 66.726953, 75.485899, 78.212301, 67.327518, 75.985520, 79.101014, 68.455147, 76.978418, 80.027718, 70.128732, 78.639109, 81.625388, 70.824519, 79.761084, 82.956423, 73.047990, 83.035993, 86.432669, 78.121699, 89.295732, 92.067986, 83.640902, 96.206647, 98.521271, 84.662139, 97.665724, 99.941943, 84.777632, 98.554437,
     100.858926, 84.091774, 98.249328, 100.457561, 84.713163, 99.340619, 101.986761, 84.494863, 100.356409, 103.202786, 83.452182, 100.586844, 102.945115, 83.589809, 101.790457, 103.841688, 83.059091, 102.756257, 105.211956, 82.557678, 102.513549, 105.111770, 81.402744, 101.948493, 104.765290, 81.462594, 102.509343, 105.357030, 81.221402, 102.363304, 105.215748, 80.703510,
     102.082190, 105.019789, 81.208509, 102.722333, 105.942702, 80.150383, 102.041095, 105.172585, 80.383921, 102.559126, 105.682411, 79.422671, 101.649176, 104.998828, 79.380473, 101.707026, 105.325174, 80.444942, 102.811074, 106.507550, 80.083224, 102.620975, 106.142246, 79.583672, 102.384748, 105.928084, 80.307592, 103.007447, 106.578363, 80.231814, 102.832380, 106.329173,
     66.625043, 75.359994, 76.879266, 66.866579, 75.644625, 78.317934, 67.370544, 76.063918, 79.113839, 68.919948, 77.498724, 80.523409, 70.165345, 78.605392, 81.767772, 70.459767, 79.120251, 82.503551, 73.214921, 82.909812, 86.116734, 78.017789, 89.079570, 91.470248, 84.085913, 96.642557, 98.710956, 84.789354, 97.887954, 99.776391, 84.756809, 98.490381,
     100.473212, 83.705578, 97.798455, 99.775012, 84.505344, 99.101634, 101.407709, 83.986692, 99.692684, 102.275874, 82.594567, 99.343170, 101.477625, 81.756050, 99.185341, 100.995656, 81.462387, 99.842102, 101.874785, 81.167345, 99.917603, 101.901055, 80.884782, 100.203682, 102.318486, 80.545818, 99.971868, 102.386403, 79.954837, 99.585810, 101.957181, 79.676550,
     99.336758, 101.876646, 79.439909, 99.231125, 102.170172, 79.426326, 99.747707, 102.591533, 79.220092, 99.746190, 102.544370, 78.597669, 99.070537, 102.126181, 78.655313, 99.318693, 102.536510, 79.675515, 100.627318, 103.740743, 79.661725, 100.905744, 103.906295, 79.116114, 100.508447, 103.416259, 79.161001, 100.584845, 103.451079, 78.580845, 100.010825, 102.962697,
     66.009033, 75.097704, 76.060677, 66.260153, 74.873681, 77.345239, 66.996690, 75.428877, 78.422947, 68.585465, 77.072192, 79.965042, 69.751362, 78.214990, 81.286630, 70.042957, 78.603530, 82.101220, 72.623319, 81.976281, 85.334345, 77.344274, 88.102393, 90.471213, 82.980625, 95.330621, 97.374750, 83.889402, 96.848031, 98.569399, 84.007516, 97.606013,
     99.237261, 83.184514, 97.129766, 98.904709, 83.429084, 98.048749, 100.002137, 83.142453, 98.676412, 100.860236, 82.078880, 98.318762, 100.228022, 80.683721, 97.329242, 98.880576, 80.541267, 97.500034, 99.085775, 80.821692, 98.055919, 99.610150, 80.907536, 98.638558, 100.205682, 80.601462, 98.250983, 100.250224, 79.726953, 97.460181, 99.593050, 79.202303,
     97.007516, 99.285113, 79.140661, 97.284976, 99.763221, 80.056885, 98.657381, 100.995036, 79.608495, 98.344205, 100.656830, 78.839481, 97.639523, 100.109632, 78.136523, 97.174033, 99.640488, 79.091498, 98.554989, 100.899745, 79.494243, 99.119355, 101.702200, 79.596635, 99.163759, 101.773495, 79.281873, 98.797904, 101.370130, 78.634076, 98.275667, 100.727780,
     65.440185, 74.496035, 75.560298, 65.870992, 74.298421, 76.882852, 66.453837, 74.615114, 77.663794, 68.464525, 76.732124, 79.664414, 69.701372, 77.970006, 80.974764, 69.808178, 78.326898, 81.632972, 72.314487, 81.742191, 85.032959, 76.781769, 87.514169, 89.942564, 82.317521, 94.524098, 96.350548, 83.451010, 96.272978, 97.950424, 83.240709, 96.715231,
     98.353168, 82.469834, 96.357512, 98.063021, 82.252362, 96.870165, 98.690960, 82.667310, 97.967248, 99.961801, 81.858167, 97.864718, 99.511687, 80.578363, 97.021789, 98.387575, 80.115562, 96.597876, 97.747845, 80.643591, 97.166586, 98.485486, 80.974488, 97.859684, 99.384955, 80.965938, 97.849204, 99.591533, 80.256292, 97.271806, 99.064125, 79.190788,
     96.469006, 98.323933, 79.337861, 96.932773, 98.733159, 79.319175, 97.061091, 99.030821, 79.881473, 97.848031, 99.782321, 79.581949, 97.762118, 99.706199, 78.717231, 97.028753, 98.965938, 78.725160, 97.400055, 99.441357, 78.798869, 97.601324, 99.809005, 79.068331, 97.750121, 100.112666, 79.246777, 97.929325, 100.242157, 78.630766, 97.346549, 99.641591,
     65.284355, 74.000276, 75.421085, 65.564987, 74.092257, 76.709302, 66.039578, 74.507757, 77.513066, 67.878232, 76.130801, 79.238364, 69.443081, 77.546025, 80.709577, 69.230366, 77.821761, 81.004896, 72.175343, 81.931118, 84.866166, 77.013377, 87.981107, 90.133421, 81.620079, 93.863683, 95.690960, 82.719713, 95.450872, 97.320554, 82.678825, 95.931394,
     97.817555, 81.887058, 95.757085, 97.373923, 81.554368, 96.023650, 97.778529, 81.394470, 96.552231, 98.467903, 80.659588, 96.665104, 98.175550, 79.696752, 96.413983, 97.515273, 79.226712, 95.877129, 96.725643, 79.204509, 95.641522, 96.682824, 79.426188, 96.144039, 97.366476, 80.123009, 96.926567, 98.279666, 79.213956, 96.252775, 97.653865, 78.654761,
     95.976763, 97.399710, 78.697718, 95.956285, 97.562091, 79.012825, 96.217541, 98.008343, 80.134869, 97.741847, 99.360822, 79.656416, 97.519203, 99.019237, 78.869544, 96.946839, 98.585327, 78.811487, 97.261946, 99.188995, 78.472937, 97.149211, 99.054540, 78.628422, 97.217748, 99.183272, 79.338206, 97.949321, 99.934841, 79.028822, 97.629180, 99.576295,
     64.884093, 74.043715, 75.319796, 65.671378, 74.404261, 76.839757, 66.172792, 74.756326, 77.621802, 67.882783, 76.263601, 79.388747, 69.068538, 77.200924, 80.534993, 69.479970, 78.104047, 81.259601, 72.040268, 81.863339, 84.547266, 76.380059, 87.457354, 89.476039, 80.777150, 93.120734, 95.110115, 81.815693, 94.637661, 96.451010, 81.951665, 95.469282,
     97.123561, 81.865614, 95.965869, 97.315107, 81.248707, 95.934910, 97.433910, 81.362132, 96.675515, 98.354340, 79.321313, 95.495139, 96.832035, 77.757774, 94.822726, 95.787837, 77.453630, 94.517341, 95.339999, 78.598566, 95.344343, 96.165207, 78.551472, 95.526305, 96.475833, 78.611873, 95.728332, 96.972764, 78.092602, 95.257671, 96.672413, 78.173619,
     95.389230, 96.733779, 78.311660, 95.616355, 97.046473, 79.557402, 96.907881, 98.562229, 79.979108, 97.598014, 99.052058, 78.933531, 96.663311, 98.148935, 78.433497, 96.577122, 98.334896, 78.979315, 97.530373, 99.394470, 78.299662, 97.068538, 98.748397, 78.856995, 97.691995, 99.252155, 79.386265, 98.269255, 99.813694, 78.914294, 97.678411, 99.226850,
     64.783631, 74.018824, 75.065366, 65.405158, 74.182997, 76.543060, 66.067572, 74.490174, 77.587258, 67.538371, 75.823485, 79.065435, 68.924292, 77.265049, 80.387299, 69.236641, 77.859477, 80.932083, 71.794318, 81.493553, 84.114942, 75.977591, 87.032821, 88.932841, 80.646349, 92.990485, 95.014480, 81.817210, 94.726332, 96.543060, 81.872578, 95.581949,
     96.978005, 81.076260, 95.130732, 96.602220, 81.065228, 95.710336, 97.042474, 80.541060, 95.972419, 97.457492, 78.472178, 94.553403, 95.972833, 76.490174, 93.239261, 94.275598, 75.978142, 93.255740, 94.070330, 76.834517, 94.113976, 94.895608, 76.976694, 94.462111, 95.193822, 76.533614, 94.021375, 95.000276, 75.181687, 92.573674, 93.887058, 75.367786,
     92.853616, 94.125767, 76.568503, 94.542784, 95.683169, 77.352065, 95.307109, 96.697373, 77.513687, 95.426877, 96.816383, 76.448390, 94.690616, 96.033510, 75.561125, 94.130663, 95.770117, 76.632835, 95.300627, 97.083431, 76.722885, 95.623664, 97.355995, 76.584362, 95.639178, 97.114735, 76.397918, 95.447218, 96.899469, 75.739847, 94.830173, 96.225057,
     64.710750, 73.715024, 74.784803, 65.123078, 73.802730, 76.359305, 65.557057, 74.001586, 77.153417, 67.174860, 75.468317, 78.580432, 68.419017, 76.896228, 79.832793, 68.834172, 77.631800, 80.541681, 71.475626, 81.109770, 83.911329, 75.578432, 86.575950, 88.741364, 80.899262, 93.241881, 95.230297, 82.139075, 94.988416, 96.548231, 81.664552, 95.237537,
     96.488726, 81.324485, 95.266910, 96.707371, 80.200579, 94.793422, 96.424188, 80.141419, 95.770461, 97.260498, 78.138178, 94.391988, 95.786044, 75.034958, 91.897745, 93.079432, 74.493277, 92.072054, 92.886920, 75.259326, 93.143557, 93.772461, 75.605392, 93.595946, 94.162794, 75.432255, 93.311935, 93.860994, 73.729642, 91.722058, 92.404882, 73.881473,
     92.062539, 93.003792, 74.808936, 93.260360, 94.351582, 75.669379, 94.222023, 95.197270, 75.834655, 94.398607, 95.483348, 73.969248, 92.736813, 93.920706, 73.026684, 92.028270, 93.256637, 74.346135, 93.513273, 94.803489, 75.036199, 94.217196, 95.699786, 75.074260, 94.455147, 95.850721, 73.890919, 93.385644, 94.713163, 73.054265, 92.442391, 93.689444,
     64.689168, 73.604427, 74.786941, 64.611184, 73.196718, 75.876164, 64.857133, 73.394056, 76.509136, 66.487692, 74.941736, 77.868648, 67.976419, 76.365097, 79.200097, 68.371647, 77.065986, 79.988554, 70.806109, 80.568020, 83.277322, 74.646073, 85.707991, 87.766186, 79.724471, 92.070537, 93.853548, 81.412811, 94.123836, 95.641316, 81.157760, 94.631731,
     96.042267, 80.064745, 94.239537, 95.630145, 79.674895, 94.535200, 96.220368, 79.408329, 95.103910, 96.813625, 77.791698, 94.211956, 95.549748, 75.389850, 92.555954, 93.601669, 73.225402, 90.986623, 91.560229, 73.838171, 91.876853, 92.305799, 73.677860, 91.862994, 92.399986, 74.066883, 92.141902, 92.734124, 74.160863, 92.421016, 92.945184, 73.813349,
     92.456181, 92.979521, 73.237468, 91.997035, 92.733986, 72.987244, 91.784872, 92.611598, 73.862580, 92.604909, 93.719506, 74.455147, 93.200441, 94.318831, 73.766048, 92.741364, 93.838654, 73.695649, 92.908433, 94.150038, 73.349238, 92.646694, 93.987382, 73.800110, 93.328897, 94.611046, 73.991795, 93.705095, 94.919120, 73.493622, 93.090395, 94.346756,
     64.888437, 73.603806, 74.883610, 65.010481, 73.508033, 76.139488, 64.975798, 73.497966, 76.569468, 66.324622, 74.837344, 77.719989, 67.547542, 75.948493, 78.828863, 68.259464, 76.908019, 80.031373, 70.707991, 80.446942, 83.281390, 74.311246, 85.501620, 87.469144, 79.626284, 92.129835, 93.733641, 80.945460, 93.919189, 95.382610, 80.834724, 94.477350,
     96.041853, 80.207681, 94.457078, 95.996277, 79.185479, 94.209405, 95.873337, 78.606978, 94.474660, 96.051438, 77.518513, 94.215266, 95.380749, 74.631456, 92.110598, 93.014204, 72.991381, 90.803282, 91.279115, 72.611046, 90.562160, 90.830518, 72.102875, 90.287113, 90.678549, 73.084534, 91.221334, 91.946770, 74.126939, 92.434117, 93.020685, 74.011998,
     92.721092, 92.950355, 73.015100, 92.045784, 92.354616, 71.279528, 90.331518, 91.023719, 72.334069, 91.302627, 92.277529, 73.816314, 92.836861, 93.660829, 73.891747, 92.899469, 93.870785, 73.552989, 92.632007, 93.866924, 71.910984, 91.364338, 92.543267, 73.025167, 92.724816, 93.906226, 73.882024, 93.731711, 94.859615, 74.386679, 94.346687, 95.237399,
     64.951320, 73.857340, 75.146521, 65.305247, 74.034751, 76.557402, 65.126732, 73.714128, 76.550852, 66.047163, 74.487485, 77.328070, 67.268841, 75.776805, 78.697649, 67.860098, 76.705371, 79.779011, 70.289044, 80.003792, 82.853479, 74.806247, 85.851617, 87.752810, 79.975729, 92.571675, 94.130594, 80.659036, 93.869131, 95.358891, 80.745777, 94.483141,
     96.063159, 80.407433, 94.584155, 96.177963, 79.516307, 94.587051, 96.331449, 78.755637, 94.628008, 96.351307, 77.202372, 93.820727, 95.051989, 74.319313, 91.697580, 92.626215, 73.091705, 90.869268, 91.380266, 73.068882, 90.935737, 91.276357, 72.426808, 90.465283, 90.828587, 73.455285, 91.625388, 92.080949, 74.077019, 92.416672, 92.820589, 73.733917,
     92.158795, 92.621320, 73.103220, 91.938013, 92.499690, 72.143832, 91.337585, 91.847825, 72.948769, 92.167345, 92.749017, 73.547059, 92.800041, 93.408536, 73.563125, 92.800110, 93.546646, 73.450872, 92.773840, 93.792664, 72.123423, 91.730883, 92.854444, 72.651934, 92.404330, 93.652417, 72.925602, 92.777494, 93.881128, 73.641660, 93.820382, 94.530373,
     64.998138, 74.196442, 75.354409, 65.104254, 73.922223, 76.424050, 65.160519, 73.777081, 76.715438, 66.079432, 74.568779, 77.605461, 66.835758, 75.512997, 78.445080, 67.559333, 76.638213, 79.402400, 70.668896, 80.553885, 83.123905, 75.099979, 86.194236, 88.039302, 79.872371, 92.398676, 94.175067, 80.966697, 94.145625, 95.903261, 81.583672, 95.276563,
     96.919327, 80.054678, 94.354340, 95.892022, 79.365511, 94.524650, 96.149486, 79.045646, 95.099014, 96.733848, 77.169206, 93.764118, 95.095015, 73.534924, 90.819761, 91.731504, 72.006481, 89.981590, 90.266634, 73.320761, 91.406054, 91.625595, 73.681997, 91.757843, 92.122388, 73.600496, 91.732607, 92.035441, 72.109081, 90.442805, 90.795422, 72.163483,
     90.518513, 91.273736, 73.216024, 91.929049, 92.587120, 73.793905, 92.817417, 93.297594, 73.847411, 92.927532, 93.449355, 72.159898, 91.320416, 91.931876, 71.591188, 90.916776, 91.671309, 73.229952, 92.692960, 93.599048, 73.360201, 92.976901, 93.884507, 72.932221, 92.626767, 93.673309, 72.151555, 91.971109, 92.788251, 71.803627, 91.782804, 92.512584,
     65.083707, 74.339309, 75.556850, 64.843412, 73.632766, 76.145763, 64.747294, 73.376336, 76.320830, 65.821830, 74.423016, 77.387575, 67.159622, 75.808178, 78.695511, 67.499414, 76.499828, 79.248776, 70.387851, 80.487554, 82.932290, 74.740674, 86.150590, 88.068400, 79.338275, 91.893057, 93.822933, 81.202510, 94.227194, 95.960284, 81.166655, 94.858857,
     96.448666, 79.823830, 94.113149, 95.770944, 79.542784, 94.794249, 96.300076, 78.738813, 94.828242, 96.384265, 77.729711, 94.359650, 95.598704, 73.868717, 91.182169, 91.869682, 72.347239, 90.245122, 90.466455, 73.466662, 91.373371, 91.720334, 74.433841, 92.424878, 92.819417, 73.725436, 91.776736, 92.107081, 71.927670, 90.154589, 90.700752, 72.127422,
     90.619941, 91.318279, 73.167689, 91.951665, 92.403641, 74.214852, 92.900986, 93.530994, 73.737572, 92.601462, 93.437220, 71.424188, 90.579122, 91.158795, 71.300972, 90.598014, 91.301110, 73.365511, 92.786113, 93.539750, 73.879956, 93.552713, 94.164518, 73.889126, 93.631042, 94.376819, 72.201476, 91.871337, 92.712404, 71.727918, 91.396952, 92.365855,
     64.875543, 73.956009, 75.141005, 64.523064, 73.373785, 75.704199, 64.649245, 73.459560, 76.220161, 65.686479, 74.256637, 77.190030, 67.035786, 75.487554, 78.476522, 67.514790, 76.375233, 79.311935, 69.964697, 79.942633, 82.653382, 74.273668, 85.569124, 87.689375, 79.013101, 91.613183, 93.429773, 80.891195, 94.045370, 95.401710, 80.848859, 94.546439,
     96.010963, 79.663863, 93.806523, 95.580570, 79.245604, 94.343584, 95.937737, 78.816659, 94.716128, 96.334758, 77.814866, 94.464318, 95.773702, 74.498242, 91.722816, 92.546094, 73.049576, 90.498449, 90.884782, 73.718955, 91.320968, 91.793008, 73.852513, 91.769841, 92.171551, 73.840585, 91.745708, 92.129353, 73.190857, 91.300627, 91.793077, 73.153899,
     91.502793, 92.028891, 73.464594, 92.068262, 92.520030, 73.345584, 92.036751, 92.493208, 73.456733, 92.229677, 92.848031, 72.955389, 91.904503, 92.382335, 72.190650, 91.287527, 91.916845, 73.342205, 92.542577, 93.301317, 73.438323, 92.886024, 93.432049, 73.218920, 92.734124, 93.394815, 73.539130, 92.950838, 93.942219, 73.061436, 92.593188, 93.689857,
     64.847894, 73.910639, 75.100324, 64.628422, 73.549266, 75.679515, 65.062539, 73.833896, 76.499483, 66.241605, 74.611115, 77.805626, 67.644901, 75.954216, 79.171689, 68.241467, 76.939185, 80.015859, 70.818658, 80.510308, 83.288699, 74.525753, 85.677239, 87.630352, 78.841067, 91.474523, 93.029442, 80.591878, 93.723092, 95.038061, 80.584017, 94.119561,
     95.797145, 79.173619, 93.108529, 95.075571, 79.228229, 94.143832, 95.912984, 78.986692, 94.720747, 96.378129, 77.235055, 93.818934, 95.125629, 74.872854, 92.089154, 92.950493, 73.374819, 90.776667, 91.163828, 72.566848, 90.079018, 90.509826, 71.847687, 89.635179, 90.126250, 72.992209, 90.907950, 91.315107, 73.852720, 92.079156, 92.229952, 74.193960,
     92.637730, 92.766324, 72.942564, 91.468386, 91.844515, 71.803420, 90.642143, 90.883472, 73.051644, 91.779839, 92.031718, 73.779770, 92.551886, 92.716059, 73.252362, 92.230297, 92.790457, 73.181962, 92.343101, 93.098324, 72.150658, 91.409846, 92.175619, 72.520513, 91.693305, 92.757016, 74.416948, 93.758671, 94.701303, 74.171482, 93.785079, 94.520444])
    
    path=r"D:\4.png"
    pkl_name = "cnnrgb0823"
    model_name = "CornerNet0307"
    im = cv2.imread(path)
#     im = cv2.cvtColor(cv2.imread(path),cv2.COLOR_BGR2GRAY)
    im = cv2.resize(im,(32,32))
    im = np.float32(im)
    for i in range(32):
        for j in range(32):
            for k in range(3):
                im[i,j,k] = im[i,j,k] - af32MeanImage[32*i+3*j+k]
            
    im = np.reshape(im, (-1,1024*3))
    y_predict = predict(pred, x, im,keep_prob, model_name, pkl_name, IMSIZE)
    output = np.argmax(y_predict,1)
    print("predict is %d"%output[0])
    print("y_predict[0] is %f,y_predict[1] is %f"%(y_predict[0,0],y_predict[0,1]))

    
    